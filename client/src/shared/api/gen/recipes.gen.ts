/**
 * Generated by orval v7.13.2 üç∫
 * Do not edit manually.
 * Food Mood
 * OpenAPI spec version: 1.0.0
 */
import type {
  AddRecipeDto,
  PatchRecipeDto,
  RecipeControllerGetAllParams,
  RecipeDto,
  RecipeListDto,
  RecipeListLiteDto
} from './';

import { createInstance } from '../api-instance';
import type { BodyType } from '../api-instance';
type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];


  export const getFoodMood = () => {
const recipeControllerGetAll = (
    params?: RecipeControllerGetAllParams,
 options?: SecondParameter<typeof createInstance<RecipeListDto>>,) => {
      return createInstance<RecipeListDto>(
      {url: `/recipes`, method: 'GET',
        params
    },
      options);
    }
  
const recipeControllerAddRecipe = (
    addRecipeDto: BodyType<AddRecipeDto>,
 options?: SecondParameter<typeof createInstance<RecipeDto>>,) => {
      return createInstance<RecipeDto>(
      {url: `/recipes`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: addRecipeDto
    },
      options);
    }
  
const recipeControllerGetMyRecipes = (
    
 options?: SecondParameter<typeof createInstance<RecipeListLiteDto>>,) => {
      return createInstance<RecipeListLiteDto>(
      {url: `/recipes/my-recipes`, method: 'GET'
    },
      options);
    }
  
const recipeControllerGetOne = (
    id: number,
 options?: SecondParameter<typeof createInstance<RecipeDto>>,) => {
      return createInstance<RecipeDto>(
      {url: `/recipes/${id}`, method: 'GET'
    },
      options);
    }
  
const recipeControllerPatchRecipe = (
    id: number,
    patchRecipeDto: BodyType<PatchRecipeDto>,
 options?: SecondParameter<typeof createInstance<RecipeDto>>,) => {
      return createInstance<RecipeDto>(
      {url: `/recipes/${id}`, method: 'PATCH',
      headers: {'Content-Type': 'application/json', },
      data: patchRecipeDto
    },
      options);
    }
  
return {recipeControllerGetAll,recipeControllerAddRecipe,recipeControllerGetMyRecipes,recipeControllerGetOne,recipeControllerPatchRecipe}};
export type RecipeControllerGetAllResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getFoodMood>['recipeControllerGetAll']>>>
export type RecipeControllerAddRecipeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getFoodMood>['recipeControllerAddRecipe']>>>
export type RecipeControllerGetMyRecipesResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getFoodMood>['recipeControllerGetMyRecipes']>>>
export type RecipeControllerGetOneResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getFoodMood>['recipeControllerGetOne']>>>
export type RecipeControllerPatchRecipeResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getFoodMood>['recipeControllerPatchRecipe']>>>
